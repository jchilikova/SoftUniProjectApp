@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_SecondaryLayout.cshtml";
}
@using Foodnetic.Constants
@using Foodnetic.ViewModels.Menus
@model Foodnetic.ViewModels.Menus.MenuViewModel
<style>

    .text-foods {
        font-family: "Playfair Display",sans-serif;
        font-style: italic;
    }

    .hr-green {
        background-color: black;
        width: 50%
    }
    .img {
        max-height: 18vw;
        min-height: 17vw;
        max-width: 23vw;
        min-width: 12vw;
        margin-right: 20px;
        margin-left: 0px;
    }
</style>
<body>
    <header>
        @{
            await Html.RenderPartialAsync("_DefaultNavbarPartial");
        }
    </header>
    <div class="intro-text text-center">
        <h1 class="intro-lead-in mb-4 mt-4">
            Daily Menu  @if (Model != null)
            {
                <a>for @DateTime.Today.Date.ToString("D")</a>
            }
        </h1>
        <hr class="hr-green" />
        @if (@Model == null)
        {
            <div>
                <a asp-controller="Menus" asp-action="Create" class="btn btn-xl">Create Menu</a>
            </div>
        }
        <div class="my-3">
            <a asp-action="History" asp-controller="Menus">View history...</a>
        </div>
    </div>
    @if (@Model == null)
    {
        if (this.ViewData[GlobalConstants.ErrorString] != null)
        {
            <div class="bg-danger text-center container rounded mt-3 py-3">
                <h5 class="text-white">@ViewData[GlobalConstants.ErrorString]</h5>
            </div>
        }
        <div class="text-center my-5">
            <h2 class="text-foods my-3">Create your own daily menu for breakfast, lunch, dinner and dessert!</h2>
        </div>

    }
    else
    {
        <div class="row d-flex justify-content-between mx-2 mt-5 text-center">
            <div class="col-md-3">
                <h2 class="text-foods">
                    Breakfast
                </h2>
            @if (@Model.Breakfast != null)
            {
                {
                    await Html.RenderPartialAsync("_RecipeFromMenuPartial", Model.Breakfast);
                }
            }
            else
            {
                <h4>You don't have enough grocery for breakfast.</h4>
            }
            </div>
            <div class="col-md-3">
                <h2 class="text-foods">
                    Lunch
                </h2>
                @if (@Model.Lunch != null)
                {
                    {
                        await Html.RenderPartialAsync("_RecipeFromMenuPartial", Model.Lunch);
                    }
                }
                else
                {
                    <h4>You don't have enough grocery for lunch.</h4>
                }
            </div>
            <div class="col-md-3">
                <h2 class="text-foods">
                    Dinner
                </h2>
                @if (@Model.Dinner != null)
                {
                    {
                        await Html.RenderPartialAsync("_RecipeFromMenuPartial", Model.Dinner);
                    }
                }
                else
                {
                    <h4>You don't have enough grocery for dinner.</h4>
                }
            </div>
            <div class="col-md-3">
                <h2 class="text-foods">
                    Dessert
                </h2>
                @if (@Model.Dessert != null)
                {
                    {
                        await Html.RenderPartialAsync("_RecipeFromMenuPartial", Model.Dessert);
                    }
                }
                else
                {
                    <h4>You don't have enough grocery for dessert.</h4>
                }
            </div>

        </div>
    }
</body>
