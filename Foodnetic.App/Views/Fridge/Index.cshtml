
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_SecondaryLayout.cshtml";
}

@using System.Globalization
@using X.PagedList
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@model IEnumerable<Foodnetic.ViewModels.Groceries.GroceryViewModel>
<style>
    .bg-lightGreen {
        background-color: #90EE90
    }

    .bg-lightDanger {
        background-color: #FFb6c1
    }

    .hr-green {
        background-color: black;
        width: 50%
    }
</style>
<body>
    <header>
        @{
            await Html.RenderPartialAsync("_DefaultNavbarPartial");
        }
    </header>
    <div class="intro-text text-center">
        <h1 class="intro-lead-in mb-4 mt-4">Virtual Fridge</h1>
        <hr class="hr-green" />
        <a asp-controller="Fridge" asp-action="AddGrocery" class="btn btn-xl">Add Grocery</a>
    </div>
<table class="table w-50 mx-auto table-hover my-5 table-bordered">
    <thead>
    <tr class="row">
        <th class="col-md-5">Name</th>
        <th class="col-md-3">Quantity</th>
        <th class="col-md-4">Expiration Date</th>
    </tr>
    </thead>
    @if (Model != null)
    {
        foreach (var item in Model)
        {
            if (@item.ExpirationDate <= DateTime.Today)
            {
                continue;
            }

            <tbody>
            <tr class="row text-center">
                <td class="col-md-5">@item.Name</td>
                <td class="col-md-3">@item.Quantity</td>
                @if (@item.ExpirationDate.AddDays(-2) <= DateTime.Now)
                {
                    <td class="col-md-4 bg-lightDanger">@item.ExpirationDate.ToString("dd-MM-yyyy", CultureInfo.InvariantCulture)</td>
                }
                else
                {
                    <td class="col-md-4 bg-lightGreen">@item.ExpirationDate.ToString("dd-MM-yyyy", CultureInfo.InvariantCulture)</td>
                }

            </tr>
            </tbody>
        }
    }
</table>
@if (Model != null)
{
    <div class="row d-flex justify-content-center my-5">
        @Html.PagedListPager((IPagedList) Model, page => Url.Action("Index", new {page = page}),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] {"page-item"},
                PageClasses = new string[] {"page-link"}
            })
    </div>
}
</body>